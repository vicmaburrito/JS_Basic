* JS Conditional
** Logical Operator 
- The logical OR operator *||* checks two values and returns a boolean. If one or both values are truthy, it returns *true*. If both values are falsy, it returns *false*.

#+BEGIN_SRC js
true || false;        // true
10 > 5 || 10 > 20;    // true
false || false;       // false
10 > 100 || 10 > 20;  // false
#+END_SRC

- Table with the concept explain it

|   A    |   B   |  A  B  |
|--------+-------+--------|
| false	 | false | false  |
| false  |  true |  true  |
|  true  | false |  true  |
|  true  |  true |  true  |


- The *!* not operator reverses, or negates, the value of a boolean:
#+BEGIN_SRC js
let excited = true;
console.log(!excited); // Prints false
 
let sleepy = false;
console.log(!sleepy); // Prints true
#+END_SRC js

Essentially, the *! operator will either take a true* value and pass back *false*, or it will take a *false* value and pass back *true*.


- When we use the *&&* operator, we are checking that two things are *true*
#+BEGIN_SRC js
if (stopLight === 'green' && pedestrians === 0) {
  console.log('Go!');
} else {
  console.log('Stop');
}
#+END_SRC js

When using the *&&* operator, both conditions must evaluate to *true* for the entire condition to evaluate to *true* and execute. Otherwise, if either condition is *false*, the *&&* condition will evaluate to *false* and the *else* block will execute.

If we only care about either condition being *true*, we can use the *||* operator:
#+BEGIN_SRC js

if (day === 'Saturday' || day === 'Sunday') {
  console.log('Enjoy the weekend!');
} else {
  console.log('Do some work.');
}
#+END_SRC js

When using the *||* operator, only one of the conditions must evaluate to *true* for the overall statement to evaluate to *true*. In the code example above, if either *day === 'Saturday'* or *day === 'Sunday'* evaluates to *true* the *if*‘s condition will evaluate to *true* and its code block will execute. If the first condition in an *||* statement evaluates to *true*, the second condition won’t even be checked. Only if *day === 'Saturday'* evaluates to *false* will *day === 'Sunday'* be evaluated. The code in the *else* statement above will execute only if both comparisons evaluate to *false*.